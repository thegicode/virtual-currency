{
  "version": 3,
  "sources": ["../../../app/scripts/components/backtest/volatility.ts", "../../../app/scripts/pages/backtest4/TradeStrategy.ts", "../../../app/scripts/pages/backtest4/AppBacktest4.ts", "../../../app/scripts/utils/helpers.ts", "../../../app/scripts/pages/backtest4/Overview.ts", "../../../app/scripts/pages/backtest4/Control.ts", "../../../app/scripts/pages/backtest4/Table.ts", "../../../app/scripts/pages/backtest4/index.ts"],
  "sourcesContent": ["// \uBCC0\uB3D9\uC131 \uAD6C\uD558\uAE30\n\nfunction getDaliyVolatility(aData: any) {\n    const result =\n        ((aData.high_price - aData.low_price) / aData.opening_price) * 100;\n    return Number(result.toFixed(2));\n}\n\nfunction getVolatility(data: any, aData: any, index: number) {\n    let sum = 0;\n\n    if (index < 5) {\n        return;\n    }\n\n    // console.log(\"index\", index);\n\n    for (let i = 5; i > 0; i--) {\n        // console.log(index - i);\n        sum += data[index - i].daily_volatility;\n    }\n\n    return Number((sum / 5).toFixed(2));\n}\n\n//\nfunction volatilityBreakout(\n    prevData: { high_price: number; low_price: number },\n    realPrice: number,\n    openingPrice: number,\n    k: number\n) {\n    // 1. \uC804\uB0A0 \uD558\uB8E8\uB9CC\uC5D0 \uC6C0\uC9C1\uC778 \uCD5C\uB300\uD3ED\n    const range = prevData.high_price - prevData.low_price;\n\n    // 2. \uB9E4\uC218 \uAE30\uC900 : \uC2E4\uC2DC\uAC04 \uAC00\uACA9 > \uB2F9\uC77C \uC2DC\uAC00 + (\uB808\uC778\uC9C0 * k)\n    const standardPrice = openingPrice + range * k;\n\n    const buyCondition = realPrice > standardPrice;\n\n    return {\n        range,\n        standardPrice,\n        buyCondition,\n    };\n}\n\nexport { getDaliyVolatility, getVolatility, volatilityBreakout };\n", "import AppBacktest4 from \"./AppBacktest4\";\n\nclass TradeStrategy {\n    protected app: AppBacktest4;\n    protected index: number;\n    // protected buyData: number;\n    protected data: ITradeData4;\n\n    constructor(app: AppBacktest4, data: ITradeData4, index: number) {\n        this.app = app;\n        this.data = data;\n        this.index = index;\n\n        // this.buyData =\n        //     this.index > 0 && this.prevData && this.prevData.buy_index\n        //         ? this.app.tradeData[this.prevData.buy_index]\n        //         : null;\n    }\n\n    get buy_index() {\n        return this.index > 0 ? this.prevData.buy_index : null;\n    }\n\n    get prevData() {\n        return this.index > 0 ? this.app.tradeData[this.index - 1] : null;\n    }\n\n    get buyData() {\n        return this.index > 0 &&\n            this.prevData &&\n            typeof this.prevData.buy_index === \"number\"\n            ? this.app.tradeData[this.prevData.buy_index]\n            : null;\n    }\n\n    get orderAmount() {\n        if (!this.buyData.volatility) return 0;\n        const percent = (this.app.target / this.buyData.volatility) * 100;\n        const unitPercent = percent / this.app.marketSize;\n        return (this.app.totalInvestmentPrice * unitPercent) / 100;\n    }\n\n    get rate() {\n        return 0;\n    }\n\n    get profit() {\n        return 0;\n    }\n\n    get sum_profit() {\n        return this.prevData ? this.prevData.sum_profit : 0;\n    }\n\n    get unrealize_rate() {\n        return 0;\n    }\n\n    get unrealize_profit() {\n        return 0;\n    }\n\n    get unrealize_sum() {\n        return this.prevData ? this.prevData.unrealize_sum : 0;\n    }\n}\n\nclass BuyStrategy extends TradeStrategy {\n    constructor(app: AppBacktest4, data: ITradeData4, index: number) {\n        super(app, data, index);\n    }\n\n    get buy_index() {\n        return this.index;\n    }\n\n    get unrealize_sum() {\n        if (!this.prevData) return 0;\n        return this.prevData.unrealize_sum ? this.prevData.unrealize_sum : 0;\n    }\n\n    get orderAmount() {\n        // \uB370\uC774\uD130\uC758 volatility \uAC12\uC774 \uC5C6\uAC70\uB098 0\uC778 \uACBD\uC6B0, 0\uC744 \uBC18\uD658\n        if (!this.data.volatility || this.data.volatility === 0) return 0;\n\n        const percent = (this.app.target / this.data.volatility) * 100;\n        const unitPercent = percent / this.app.marketSize;\n        return (this.app.totalInvestmentPrice * unitPercent) / 100;\n    }\n}\n\nclass HoldStrategy extends TradeStrategy {\n    constructor(app: AppBacktest4, data: ITradeData4, index: number) {\n        super(app, data, index);\n    }\n\n    get unrealize_rate() {\n        return (\n            (this.data.trade_price - this.buyData.trade_price) /\n            this.buyData.trade_price\n        );\n    }\n\n    get unrealize_profit() {\n        return this.unrealize_rate * this.orderAmount;\n    }\n\n    get unrealize_sum() {\n        return this.prevData.unrealize_sum\n            ? this.prevData.unrealize_sum + this.unrealize_profit\n            : 0;\n    }\n}\n\nclass SellStrategy extends TradeStrategy {\n    private sellPrice: number;\n\n    constructor(\n        app: AppBacktest4,\n        data: ITradeData4,\n        index: number,\n        sellPrice: number\n    ) {\n        super(app, data, index);\n        this.sellPrice = sellPrice;\n    }\n\n    get rate() {\n        return (\n            (this.sellPrice - this.buyData.trade_price) /\n            this.buyData.trade_price\n        );\n    }\n\n    get profit() {\n        return this.rate * this.orderAmount;\n    }\n\n    get sum_profit() {\n        return (this.prevData.sum_profit || 0) + this.profit;\n    }\n\n    get unrealize_sum() {\n        return this.sum_profit;\n    }\n}\n\nclass ReserveStrategy extends TradeStrategy {\n    constructor(app: AppBacktest4, data: ITradeData4, index: number) {\n        super(app, data, index);\n    }\n}\n\nexport { BuyStrategy, HoldStrategy, SellStrategy, ReserveStrategy };\n", "/**\n * \uD22C\uC790\uC804\uB7B5 4 : \uB2E4\uC790 \uAC00\uC0C1\uD654\uD3D0 + \uC804\uC77C \uC624\uD6C4 \uC0C1\uC2B9 \uC2DC \uC624\uC804 \uD22C\uC790 + \uBCC0\uB3D9\uC131 \uC870\uC808\n * \uD22C\uC790\uB300\uC0C1 : \uC544\uBB34 \uAC00\uC0C1\uD654\uD3D0 \uBA87 \uAC1C \uC120\uD0DD\n * \uAC70\uB798\uBE44\uC6A9  : 0.1% \uC801\uC6A9\n *             - \uC9C0\uC815\uAC00 \uB9E4\uC218\uAC00 \uC591\uD638\uD55C \uC804\uB7B5\uC774\uB77C \uAC70\uB798 \uBE44\uC6A9\uC774 \uC0C1\uB300\uC801\uC73C\uB85C \uC801\uAC8C \uBC1C\uC0DD\n * \uD22C\uC790\uC804\uB7B5 :\n *      - \uC624\uC804 0\uC2DC\uC5D0 \uAC00\uC0C1\uD654\uD3D0\uC758 \uC804\uC77C \uC624\uD6C4(12\uC2DC ~ 24\uC2DC) \uC218\uC775\uB960\uACFC \uAC70\uB798\uB7C9 \uCCB4\uD06C\n *      - \uB9E4\uC218: \uC804\uC77C \uC624\uD6C4 \uC218\uC775\uB960 > 0, \uC804\uC77C \uC624\uD6C4 \uAC70\uB798\uB7C9 > \uC624\uC804 \uAC70\uB798\uB7C9\n *      - \uC790\uAE08 \uAD00\uB9AC : \uAC00\uC0C1\uD654\uD3D0\uBCC4 \uD22C\uC785 \uAE08\uC561\uC740 (\uD0C0\uAE43 \uBCC0\uB3D9\uC131 / \uD2B9\uC815 \uD654\uD3D0\uC758 \uC804\uC77C \uC624\uD6C4 \uBCC0\uB3D9\uC131) / \uD22C\uC790\uB300\uC0C1 \uD654\uD3D0\uC218\n *      - \uB9E4\uB3C4 : \uC815\uC624\n *\n * \uC7AC\uB8CC : \uC804\uC77C \uC624\uD6C4 (12\uC2DC ~ 24\uC2DC) \uC218\uC775\uB960\uACFC\n *       \uC804\uC77C \uC624\uC804 & \uC624\uD6C4 \uAC70\uB798\uB7C9\n *\n * \uD558\uB8E8 \uB450 \uBC88 \uC790\uC815, \uC815\uC624\uC5D0 \uB9E4\uC218\uD558\uB294 \uC804\uB7B5\uB3C4 ?\n * 2018\uB144 \uD558\uB77D\uC7A5\uC5D0\uC11C\uB3C4 \uC774\uB354\uB9AC\uC6C0\uC740 \uC218\uC775\n */\n\nimport Control from \"./Control\";\nimport Overview from \"./Overview\";\nimport Table from \"./Table\";\n\nimport { getDaliyVolatility } from \"@app/scripts/components/backtest/volatility\";\nimport {\n    BuyStrategy,\n    HoldStrategy,\n    ReserveStrategy,\n    SellStrategy,\n} from \"./TradeStrategy\";\n\nexport default class AppBacktest4 extends HTMLElement {\n    public tradeData: any[];\n    public market: string;\n    public count: number;\n    public totalInvestmentPrice: number;\n    public marketSize: number;\n    public investmentPrice: number;\n    public target: number;\n\n    private overviewCustomElement: Overview;\n    private controlCustomElement: Control;\n    private tableCustomElement: Table;\n\n    constructor() {\n        super();\n\n        this.tradeData = [];\n        this.market = \"\";\n        this.count = 30;\n        this.marketSize = 5;\n        this.totalInvestmentPrice = 1000000;\n        this.investmentPrice = this.totalInvestmentPrice / this.marketSize;\n        this.target = 2; // \uCD94\uCC9C 2\n\n        this.overviewCustomElement = this.querySelector(\n            \"backtest-overview\"\n        ) as Overview;\n        this.controlCustomElement = this.querySelector(\n            \"backtest-control\"\n        ) as Control;\n        this.tableCustomElement = this.querySelector(\"backtest-table\") as Table;\n    }\n\n    connectedCallback() {\n        this.initialize();\n        this.runBackTest();\n    }\n\n    // disconnectedCallback() {\n    // }\n\n    private initialize() {\n        this.controlCustomElement.initialize();\n    }\n\n    public async runBackTest() {\n        this.reset();\n\n        for (let index = 0; index < this.count; index++) {\n            console.log(index);\n\n            try {\n                const tradeData = await this.getTradeData(index);\n\n                this.tradeData.push(tradeData);\n\n                await this.delay(100);\n            } catch (error: any) {\n                console.error(\n                    `Failed to process index ${index}:`,\n                    error.message\n                );\n            }\n        }\n\n        this.render();\n    }\n\n    private async getTradeData(index: number) {\n        const toDate = `${this.getToDate(index)}+09:00`;\n        console.log(toDate);\n\n        const fetchedData = await this.fetchData(\"60\", \"37\", toDate);\n\n        const { makedData, afternoonData, sellPrice } = this.makeTradeData(\n            fetchedData,\n            toDate\n        );\n\n        const actionedData = this.setTradingAction(makedData, index);\n\n        const volatedData = this.setVolatility(actionedData, afternoonData);\n\n        const enrichedData = this.getStrategy(volatedData, index, sellPrice);\n\n        return enrichedData;\n    }\n\n    private reset() {\n        this.dataset.loading = \"true\";\n        this.tradeData = [];\n    }\n\n    private delay(duration: number) {\n        return new Promise((resolve) => setTimeout(resolve, duration));\n    }\n\n    private async fetchData(unit: string, fetchCount: string, to: string) {\n        const searchParams = new URLSearchParams({\n            market: this.market,\n            count: fetchCount,\n            unit,\n            to,\n            // to: \"2024-04-28T01:00:00+09:00\",\n        });\n\n        const response = await fetch(`/fetchCandlesMinutes?${searchParams}`);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    private getToDate(index: number) {\n        const now = new Date();\n        now.setMonth(now.getMonth());\n        now.setDate(now.getDate() - this.count + index + 1);\n        now.setHours(22, 0, 0, 0);\n        return now.toISOString().slice(0, 19);\n    }\n\n    private makeTradeData(data: ICandlesMinutes[], date: string) {\n        const dates = data.map((d) => d.candle_date_time_kst);\n\n        const prevDate = new Date(date);\n        prevDate.setUTCDate(prevDate.getUTCDate() - 1);\n        const prevDateISOString = prevDate.toISOString().slice(0, 10);\n\n        // prev first index\n        const prevFirstIndex = dates.indexOf(prevDateISOString + \"T00:00:00\"); // It must be 0.\n\n        // prev mid index\n        const prevMidIndex = dates.indexOf(prevDateISOString + \"T12:00:00\"); // It must be 12.\n\n        // prev last index\n        const prevLastIndex = dates.indexOf(date.slice(0, 11) + \"00:00:00\"); // It must be 24.\n\n        const prevDayData = {\n            morning: [data[prevFirstIndex], data[prevMidIndex]],\n            afternoon: [data[prevMidIndex], data[prevLastIndex]],\n        };\n\n        // \uC624\uD6C4 \uC218\uC775\uB960\n        const startPrice = prevDayData.afternoon[0].trade_price;\n        const afternoonRate =\n            (prevDayData.afternoon[1].trade_price - startPrice) / startPrice;\n\n        // \uC804\uC77C \uC624\uC804 \uAC70\uB798\uB7C9\n        const moringVolume =\n            prevDayData.morning[1].candle_acc_trade_volume -\n            prevDayData.morning[0].candle_acc_trade_volume;\n\n        // \uC804\uC77C \uC624\uD6C4 \uAC70\uB798\uB7C9\n        const afterVolume =\n            prevDayData.afternoon[1].candle_acc_trade_volume -\n            prevDayData.afternoon[0].candle_acc_trade_volume;\n\n        const condition = afternoonRate > 0 && afterVolume > moringVolume;\n\n        const makedData = {\n            date: date.slice(0, 10),\n            condition,\n            trade_price: data[prevLastIndex].trade_price,\n        };\n\n        return {\n            makedData,\n            afternoonData: this.getAfternoonData(data.slice(12)),\n            sellPrice: data[data.length - 1].trade_price,\n        };\n    }\n\n    private getAfternoonData(data: ICandlesMinutes[]) {\n        const highPrices = data.map((d) => d.high_price);\n        const lowPrices = data.map((d) => d.low_price);\n\n        return {\n            high_price: Math.max(...highPrices),\n            low_price: Math.min(...lowPrices),\n            opening_price: data[0].opening_price,\n        };\n    }\n\n    private setTradingAction(aData: ITradeData4, index: number) {\n        let action = \"\";\n        if (index === 0) {\n            action = aData.condition ? \"Buy\" : \"Reserve\";\n        } else {\n            if (this.tradeData[index - 1].condition === aData.condition) {\n                action = aData.condition ? \"Hold\" : \"Reserve\";\n            } else {\n                action = aData.condition ? \"Buy\" : \"Sell\";\n            }\n        }\n\n        return {\n            ...JSON.parse(JSON.stringify(aData)),\n            action,\n        };\n    }\n\n    // \uD2B9\uC815 \uD654\uD3D0\uC758 \uC804\uC77C \uC624\uD6C4 \uBCC0\uB3D9\uC131\n    private setVolatility(data: ITradeData4, afternoonData: IAfternoonData) {\n        return {\n            ...JSON.parse(JSON.stringify(data)),\n            volatility: getDaliyVolatility(afternoonData),\n        };\n    }\n\n    private getStrategy(data: ITradeData4, index: number, sellPrice: number) {\n        const result = this.tradeStrategy(data, index, sellPrice);\n\n        return {\n            ...data,\n            buy_index: result.buy_index,\n            order_amount: (data.action === \"Buy\" && result.orderAmount) || \"\",\n            rate: result.rate,\n            profit: result.profit,\n            sum_profit: result.sum_profit,\n            unrealize_rate: result.unrealize_rate,\n            unrealize_profit: result.unrealize_profit,\n            unrealize_sum: result.unrealize_sum,\n        };\n    }\n\n    private tradeStrategy(data: ITradeData4, index: number, sellPrice: number) {\n        switch (data.action) {\n            case \"Buy\":\n                return new BuyStrategy(this, data, index);\n            case \"Hold\":\n                return new HoldStrategy(this, data, index);\n            case \"Sell\":\n                return new SellStrategy(this, data, index, sellPrice);\n            case \"Reserve\":\n                return new ReserveStrategy(this, data, index);\n            default:\n                throw new Error(`\uC54C \uC218 \uC5C6\uB294 \uC7A5\uB974: ${data.action}`);\n        }\n    }\n\n    private render() {\n        this.tableCustomElement.render();\n\n        this.overviewCustomElement.redner();\n\n        this.dataset.loading = \"false\";\n    }\n}\n", "export function cloneTemplate<T extends HTMLElement>(\n    template: HTMLTemplateElement\n) {\n    const content = template.content.firstElementChild;\n    if (!content) {\n        throw new Error(\"Template content is empty\");\n    }\n    return content.cloneNode(true) as T;\n}\n\nexport function updateElementsTextWithData<T>(data: T, container: HTMLElement) {\n    Object.entries(data as Record<string, unknown>).forEach(([key, value]) => {\n        const element = container.querySelector(`.${key}`) as HTMLElement;\n        // console.log(key, value, element);\n        element.textContent = String(value);\n    });\n}\n\nexport function roundToDecimalPlace(amount: number, point: number) {\n    const decimalPoint = Math.pow(10, point);\n    return Math.round(amount * decimalPoint) / decimalPoint;\n}\n", "import {\n    cloneTemplate,\n    updateElementsTextWithData,\n} from \"@app/scripts/utils/helpers\";\nimport AppBacktest4 from \"./AppBacktest4\";\n\nexport default class Overview extends HTMLElement {\n    private app: AppBacktest4;\n\n    private totalProfit: number;\n    private totalSumPrice: number;\n    private size: number;\n\n    private sumElement: HTMLElement;\n    private listElement: HTMLElement;\n    private itemTemplate: HTMLTemplateElement;\n\n    constructor() {\n        super();\n\n        this.app = document.querySelector(\"app-backtest4\") as AppBacktest4;\n\n        this.totalProfit = 0;\n        this.totalSumPrice = 0;\n        this.size = 0;\n\n        this.sumElement = this.querySelector(\".overview-sum\") as HTMLElement;\n        this.listElement = this.querySelector(\".overview-list\") as HTMLElement;\n        this.itemTemplate = document.querySelector(\n            \"#tp-overviewItem\"\n        ) as HTMLTemplateElement;\n    }\n\n    connectedCallback() {}\n\n    public redner() {\n        this.renderList();\n        this.renderSum(true);\n    }\n\n    private renderList() {\n        if (!this.app) return;\n\n        const totalProfit =\n            this.app.tradeData[this.app.tradeData.length - 1].unrealize_sum;\n        const totalRate = (totalProfit / this.app.investmentPrice) * 100;\n        const renderData = {\n            market: this.app.market,\n            period: this.app.count,\n            totalRate: `${totalRate.toFixed(2)}%`,\n            totalProfit: ` ${Math.round(totalProfit).toLocaleString()} \uC6D0`,\n        };\n\n        const cloned = cloneTemplate<HTMLElement>(this.itemTemplate);\n        cloned.dataset.value = totalProfit;\n\n        updateElementsTextWithData(renderData, cloned);\n\n        this.listElement.appendChild(cloned);\n\n        this.addEvent(cloned);\n\n        this.totalProfit = totalProfit;\n    }\n\n    addEvent(cloned: HTMLElement) {\n        const deleteButton = cloned.querySelector(\n            \".deleteButton\"\n        ) as HTMLButtonElement;\n\n        deleteButton.addEventListener(\"click\", () => {\n            const profit = Number(cloned.dataset.value);\n            cloned.remove();\n            this.renderSum(false, profit);\n        });\n    }\n\n    private renderSum(isAdd: boolean, profit?: number) {\n        if (!this.app) return;\n\n        if (isAdd) {\n            this.totalSumPrice += this.totalProfit;\n            this.size++;\n        } else {\n            if (!profit) return;\n            this.totalSumPrice -= profit;\n            this.size--;\n        }\n\n        const totalSumRate =\n            this.totalSumPrice === 0\n                ? 0\n                : (this.totalSumPrice /\n                      (this.app.investmentPrice * this.size)) *\n                  100;\n\n        const renderData = {\n            totalSumPrice: Math.round(this.totalSumPrice).toLocaleString(),\n            totalSumRate: totalSumRate.toFixed(2).toLocaleString(),\n        };\n\n        updateElementsTextWithData(renderData, this.sumElement);\n    }\n}\n", "import AppBacktest4 from \"./AppBacktest4\";\n\nexport default class Control extends HTMLElement {\n    private app: AppBacktest4;\n\n    private formElement: HTMLFormElement;\n    private selectElement: HTMLSelectElement;\n    private countElement: HTMLInputElement;\n    private investmentPriceElement: HTMLElement;\n\n    constructor() {\n        super();\n\n        this.app = document.querySelector(\"app-backtest4\") as AppBacktest4;\n\n        this.formElement = this.querySelector(\"form\") as HTMLFormElement;\n        this.selectElement = this.querySelector(\"select\") as HTMLSelectElement;\n        this.countElement = this.querySelector(\n            \"input[name=count]\"\n        ) as HTMLInputElement;\n        this.investmentPriceElement = this.querySelector(\n            \".investmentPrice\"\n        ) as HTMLElement;\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    connectedCallback() {\n        this.formElement.addEventListener(\"submit\", this.onSubmit);\n        this.selectElement.addEventListener(\"change\", this.onChange);\n    }\n\n    disconnectedCallback() {\n        this.formElement.removeEventListener(\"submit\", this.onSubmit);\n        this.selectElement.removeEventListener(\"change\", this.onChange);\n    }\n\n    public initialize() {\n        if (!this.app) return;\n\n        this.app.market = this.selectElement.value;\n        this.countElement.value = this.app.count.toString();\n        this.investmentPriceElement.textContent =\n            this.app.investmentPrice.toLocaleString();\n    }\n\n    private onChange(event: Event) {\n        if (!this.app) return;\n\n        const target = event.target as HTMLInputElement;\n        this.app.market = target.value;\n        this.app.runBackTest();\n    }\n\n    private onSubmit(event: Event) {\n        event?.preventDefault();\n\n        if (!this.app) return;\n\n        const maxSize = Number(this.countElement.getAttribute(\"max\"));\n        this.app.count =\n            Number(this.countElement.value) > maxSize\n                ? maxSize\n                : Number(this.countElement.value);\n        this.countElement.value = this.app.count.toString();\n        this.app.runBackTest();\n    }\n}\n", "import {\n    cloneTemplate,\n    updateElementsTextWithData,\n} from \"@app/scripts/utils/helpers\";\nimport AppBacktest4 from \"./AppBacktest4\";\n\nexport default class BacktestTable extends HTMLElement {\n    private app: AppBacktest4;\n\n    private tableElement: HTMLElement;\n    private template: HTMLTemplateElement;\n\n    constructor() {\n        super();\n\n        this.app = document.querySelector(\"app-backtest4\") as AppBacktest4;\n\n        this.tableElement = this.querySelector(\"tbody\") as HTMLElement;\n        this.template = document.querySelector(\n            \"#tp-item\"\n        ) as HTMLTemplateElement;\n    }\n\n    connectedCallback() {}\n\n    public render() {\n        if (!this.app) return;\n\n        this.tableElement.innerHTML = \"\";\n        const fragment = new DocumentFragment();\n\n        this.app.tradeData\n            .map((aData: ITradeData4, index) => this.createItem(aData, index))\n            .forEach((cloned: HTMLElement) => fragment.appendChild(cloned));\n\n        this.tableElement.appendChild(fragment);\n    }\n\n    private createItem(aData: ITradeData4, index: number) {\n        const cloned = cloneTemplate<HTMLElement>(this.template);\n\n        const parseData = {\n            index,\n            date: aData.date,\n            trade_price: aData.trade_price.toLocaleString(),\n            order_amount:\n                aData.order_amount &&\n                Math.round(aData.order_amount).toLocaleString(),\n            condition: aData.condition.toString(),\n            action: aData.action,\n            volatility: aData.volatility?.toFixed(2),\n            rate: (aData.rate && aData.rate * 100)?.toFixed(2) || \"\",\n            profit:\n                (aData.profit && Math.round(aData.profit).toLocaleString()) ||\n                \"\",\n            sum_profit:\n                aData.sum_profit &&\n                Math.round(aData.sum_profit).toLocaleString(),\n            unrealize_rate:\n                (aData.unrealize_rate &&\n                    (aData.unrealize_rate * 100).toFixed(2)) ||\n                \"\",\n            unrealize_profit:\n                (aData.unrealize_profit &&\n                    Math.round(aData.unrealize_profit).toLocaleString()) ||\n                \"\",\n            unrealize_sum:\n                aData.unrealize_sum &&\n                Math.round(aData.unrealize_sum).toLocaleString(),\n        };\n\n        updateElementsTextWithData(parseData, cloned);\n\n        cloned.dataset.action = aData.action;\n\n        return cloned;\n    }\n}\n", "import AppBacktest4 from \"./AppBacktest4\";\nimport Overview from \"./Overview\";\nimport Control from \"./Control\";\nimport Table from \"./Table\";\n\ncustomElements.define(\"backtest-control\", Control);\ncustomElements.define(\"backtest-overview\", Overview);\ncustomElements.define(\"backtest-table\", Table);\ncustomElements.define(\"app-backtest4\", AppBacktest4);\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../app/scripts/utils/helpers.ts", "../../../app/scripts/pages/accounts/OrderedItem.ts", "../../../app/scripts/pages/accounts/AccountItem.ts", "../../../app/scripts/pages/accounts/AppAccounts.ts", "../../../app/scripts/pages/accounts/index.ts"],
  "sourcesContent": ["export function cloneTemplate<T extends HTMLElement>(\n    template: HTMLTemplateElement\n) {\n    const content = template.content.firstElementChild;\n    if (!content) {\n        throw new Error(\"Template content is empty\");\n    }\n    return content.cloneNode(true) as T;\n}\n\nexport function updateElementsTextWithData<T>(data: T, container: HTMLElement) {\n    Object.entries(data as Record<string, unknown>).forEach(([key, value]) => {\n        const element = container.querySelector(`.${key}`) as HTMLElement;\n        element.textContent = String(value);\n    });\n}\n\nexport function roundToDecimalPlace(amount: number, point: number) {\n    const decimalPoint = Math.pow(10, point);\n    return Math.round(amount * decimalPoint) / decimalPoint;\n}\n", "import {\n    cloneTemplate,\n    updateElementsTextWithData,\n} from \"@scripts/utils/helpers\";\n\nexport default class OrderedItem extends HTMLElement {\n    private data: IOrdered;\n    private template: HTMLTemplateElement;\n    private cancelButton: HTMLButtonElement | null = null;\n\n    constructor(data: IOrdered) {\n        super();\n\n        this.data = data;\n        this.template = document.querySelector(\n            \"#orderedItem\"\n        ) as HTMLTemplateElement;\n        this.cancelButton = null;\n\n        this.onCancel = this.onCancel.bind(this);\n    }\n\n    connectedCallback() {\n        const cloned = this.createElement();\n        this.innerHTML = cloned.innerHTML;\n\n        this.dataset.side = this.data.side;\n\n        this.cancelButton = this.querySelector(\n            \".cancelButton\"\n        ) as HTMLButtonElement;\n\n        this.cancelButton?.addEventListener(\"click\", this.onCancel);\n    }\n\n    disconnectedCallback() {\n        this.cancelButton?.removeEventListener(\"click\", this.onCancel);\n    }\n\n    private createElement() {\n        const cloned = cloneTemplate<HTMLElement>(this.template);\n\n        const contentData = {\n            created_at: this.formatDateTime(this.data.created_at),\n            // ord_type:\n            //     this.data.ord_type === \"limit\" ? \"\uC9C0\uC815\uAC00 \uC8FC\uBB38\" : \"\uC2DC\uC7A5\uAC00 \uC8FC\uBB38\",\n            price: this.data.price,\n            side: this.data.side === \"bid\" ? \"\uB9E4\uC218\" : \"\uB9E4\uB3C4\",\n            volume: this.data.volume,\n        };\n\n        updateElementsTextWithData(contentData, cloned);\n\n        return cloned;\n    }\n\n    private async onCancel() {\n        if (!this.cancelButton) return;\n        this.cancelButton.disabled = true;\n\n        try {\n            const response = await fetch(`/cancel?uuid=${this.data.uuid}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            if (data.uuid === this.data.uuid) {\n                // this.dataset.cancel = \"true\";\n                this.remove();\n            }\n        } catch (error) {\n            console.error(\"Error\", error);\n        }\n    }\n\n    private formatDateTime(dateTime: string) {\n        // Date \uAC1D\uCCB4 \uC0DD\uC131\n        const date = new Date(dateTime);\n\n        // \uC6D4, \uC77C, \uC2DC\uAC04, \uBD84, \uCD08\uB97C \uAC01\uAC01 \uB450 \uC790\uB9AC\uC218\uB85C \uD3EC\uB9E4\uD305\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const day = date.getDate().toString().padStart(2, \"0\");\n        const hours = date.getHours().toString().padStart(2, \"0\");\n        const minutes = date.getMinutes().toString().padStart(2, \"0\");\n        const seconds = date.getSeconds().toString().padStart(2, \"0\");\n\n        // \uD3EC\uB9F7\uB41C \uBB38\uC790\uC5F4 \uBC18\uD658\n        return `${month}.${day} ${hours}:${minutes}:${seconds}`;\n    }\n}\n", "import {\n    cloneTemplate,\n    roundToDecimalPlace,\n    updateElementsTextWithData,\n} from \"@scripts/utils/helpers\";\nimport OrderedItem from \"./OrderedItem\";\n\nexport default class AccountItem extends HTMLElement {\n    private data: IProcessedAccountData;\n    private template: HTMLTemplateElement;\n    private ordered: HTMLElement | null = null;\n\n    constructor(data: IProcessedAccountData) {\n        super();\n\n        this.data = data;\n\n        this.template = document.querySelector(\n            \"#accountItem\"\n        ) as HTMLTemplateElement;\n\n        this.ordered = null;\n    }\n\n    connectedCallback() {\n        this.createElement();\n\n        this.ordered = this.querySelector(\".ordered\") as HTMLElement;\n\n        this.displayOrdered();\n    }\n\n    private createElement() {\n        const cloned = cloneTemplate<HTMLElement>(this.template);\n\n        const contentData = {\n            currency: this.data.currency,\n            unitCurrency: this.data.unitCurrency,\n            volume: this.data.volume,\n            buyPrice: roundToDecimalPlace(\n                this.data.buyPrice,\n                0\n            ).toLocaleString(),\n            avgBuyPrice: roundToDecimalPlace(\n                this.data.avgBuyPrice,\n                1\n            ).toLocaleString(),\n            profit: Math.round(this.data.profit).toLocaleString(),\n            profitRate: roundToDecimalPlace(this.data.profitRate, 2) + \"%\",\n        };\n\n        updateElementsTextWithData(contentData, cloned);\n\n        this.innerHTML = cloned.innerHTML;\n\n        const isIncrement = this.data.profit > 0 ? true : false;\n        this.dataset.increase = isIncrement.toString();\n\n        // [TODO] orders-chance\n        // this.ordersChance(anAccount.market);\n    }\n\n    private displayOrdered() {\n        this.data.orderedData.map((data: IOrdered) => {\n            const orderedItem = new OrderedItem(data);\n            this.ordered?.appendChild(orderedItem);\n        });\n    }\n}\n", "import {\n    roundToDecimalPlace,\n    updateElementsTextWithData,\n} from \"@scripts/utils/helpers\";\n\nimport AccountItem from \"./AccountItem\";\nimport OrderedItem from \"./OrderedItem\";\n\nexport default class AppAccounts extends HTMLElement {\n    private markets: string[];\n    private list: HTMLElement;\n    private orderedButton: HTMLButtonElement;\n\n    constructor() {\n        super();\n\n        this.list = this.querySelector(\".accountsList\") as HTMLElement;\n        this.orderedButton = this.querySelector(\n            \".orderedButton\"\n        ) as HTMLButtonElement;\n\n        this.markets = [];\n\n        this.onClickOrderedButton = this.onClickOrderedButton.bind(this);\n    }\n\n    connectedCallback() {\n        this.loadAccountData();\n\n        this.orderedButton.addEventListener(\"click\", this.onClickOrderedButton);\n    }\n\n    disconnectedCallback() {\n        this.orderedButton.removeEventListener(\n            \"click\",\n            this.onClickOrderedButton\n        );\n    }\n\n    private onClickOrderedButton() {\n        const ordereds = document.querySelectorAll<HTMLElement>(\".ordered\");\n        ordereds.forEach((ordered) => {\n            ordered.hidden = !ordered.hidden;\n        });\n    }\n\n    private async loadAccountData() {\n        try {\n            const accountsResponse = await this.fetchData(`/accounts`);\n\n            this.markets = accountsResponse.accounts.map(\n                (account: IAccount) => account.market\n            );\n\n            const tickerResponse = await this.fetchData(\n                `/ticker?markets=${encodeURIComponent(this.markets.join(\",\"))}`\n            );\n\n            this.displayAssets(accountsResponse.assets);\n\n            const orderedResponse = await this.fetchData(`/ordered`);\n            const orderedData = this.ordered(orderedResponse) as Record<\n                string,\n                IOrdered[]\n            >;\n\n            const processedAccounts = await this.processAccountsData(\n                accountsResponse.accounts,\n                tickerResponse,\n                orderedData\n            );\n\n            this.renderAccountsList(processedAccounts);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    private async fetchData(url: string) {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    private ordered(data: IOrdered[]) {\n        try {\n            let orderedData: { [key: string]: IOrdered[] } = {};\n            this.markets.map((market: string) => {\n                orderedData[market] = [];\n            });\n\n            data.map((order: IOrdered) => {\n                orderedData[order.market].push(order);\n            });\n\n            return orderedData;\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    private displayAssets(data: IAsset) {\n        const element = this.querySelector(\".assets\") as HTMLElement;\n\n        const totalAsset = data.balance + data.locked;\n\n        const contentData = {\n            totalAsset: roundToDecimalPlace(totalAsset, 0).toLocaleString(),\n            locked: roundToDecimalPlace(data.locked, 0).toLocaleString(),\n            unit: data.unit_currency,\n        };\n\n        updateElementsTextWithData(contentData, element);\n\n        delete element.dataset.loading;\n    }\n\n    private processAccountsData(\n        accounts: IAccount[],\n        tickerData: ITicker[],\n        orderedObject: Record<string, IOrdered[]>\n    ) {\n        function _handleData(account: IAccount) {\n            const ticker = tickerData.find((t) => t.market === account.market);\n            const orderedData = orderedObject[account.market];\n\n            if (!ticker) {\n                console.error(`Ticker not found for market: ${account.market}`);\n                return null;\n            }\n\n            const priceAtBuy = account.avg_buy_price * account.volume;\n            const currentPrice = ticker.trade_price * account.volume;\n            const profit = currentPrice - priceAtBuy;\n            const profitRate = priceAtBuy > 0 ? (profit / priceAtBuy) * 100 : 0;\n\n            return {\n                market: account.market,\n                currency: account.currency,\n                unitCurrency: account.unit_currency,\n                buyPrice: account.buy_price,\n                avgBuyPrice: account.avg_buy_price,\n                volume: account.volume,\n                locked: account.locked,\n                profit,\n                profitRate,\n                orderedData,\n            };\n        }\n\n        return accounts\n            .map((account) => _handleData(account))\n            .filter((account) => account !== null) as IProcessedAccountData[];\n    }\n\n    private renderAccountsList(data: IProcessedAccountData[]) {\n        const fragment = new DocumentFragment();\n\n        data.map((data) => new AccountItem(data)).forEach((accountItem) => {\n            fragment.appendChild(accountItem);\n        });\n\n        this.list.appendChild(fragment);\n\n        delete this.list.dataset.loading;\n    }\n}\n", "import AppAccounts from \"./AppAccounts\";\nimport AccountItem from \"./AccountItem\";\nimport OrderedItem from \"./OrderedItem\";\n\ncustomElements.define(\"app-accounts\", AppAccounts);\ncustomElements.define(\"account-item\", AccountItem);\ncustomElements.define(\"ordered-item\", OrderedItem);\n"],
  "mappings": "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",
  "names": ["data"]
}

{
  "version": 3,
  "sources": ["../../../app/scripts/pages/backtest5/AppBacktest5.ts", "../../../app/scripts/utils/helpers.ts", "../../../app/scripts/pages/backtest5/Overview.ts", "../../../app/scripts/pages/backtest5/Control.ts", "../../../app/scripts/pages/backtest5/Table.ts", "../../../app/scripts/pages/backtest5/index.ts"],
  "sourcesContent": ["/**\n * \uD22C\uC790\uC804\uB7B5 5 : \uB2E4\uC790 \uAC00\uC0C1\uD654\uD3D0 + \uBCC0\uB3D9\uC131 \uB3CC\uD30C\n * \uD22C\uC790\uB300\uC0C1 : \uC544\uBB34 \uAC00\uC0C1\uD654\uD3D0 \uBA87 \uAC1C \uC120\uD0DD\n * \uAC70\uB798\uBE44\uC6A9  : 0.2% \uC801\uC6A9\n * \uD22C\uC790\uC804\uB7B5 :\n *      - \uAC01 \uD654\uD3D0\uC758 \uB808\uC778\uC9C0 \uACC4\uC0B0 (\uC804\uC77C \uACE0\uAC00 - \uC800\uAC00)\n *      - \uB9E4\uC218 : \uC2E4\uC2DC\uAC04 \uAC00\uACA9 > \uB2F9\uC77C \uC2DC\uAC00 + (\uB808\uC778\uC9C0 * k)\n *          - \uD544\uC790\uB4E4\uC740 k=0.5 \uCD94\uCC9C\n *      - \uB3CC\uD30C\uC5D0 \uC131\uACF5\uD55C\uAC00\uC0C1\uD654\uD3D0\uC5D0 \uC790\uC0B0\uC758 n\uBD84\uC758 1 \uD22C\uC785\n * \uB9E4\uB3C4 : \uB2E4\uC74C\uB0A0 \uC2DC\uAC00\n * \n * \n ## \uBCC0\uB3D9\uC131 \uB3CC\uD30C \uC804\uB7B5\uC758 \uD575\uC2EC\n\n1. range \uACC4\uC0B0\n    - \uC6D0\uD558\uB294 \uAC00\uC0C1\uD654\uD3D0\uC758 \uC804\uC77C \uACE0\uAC00 - \uC804\uC77C \uC800\uAC00\n    - \uD558\uB8E8 \uC548\uC5D0 \uAC00\uC0C1\uD654\uD3D0\uAC00 \uC6C0\uC9C1\uC778 \uCD5C\uB300\uD3ED\n2. \uB9E4\uC218 \uAE30\uC900\n    - \uC2DC\uAC00 \uAE30\uC900\uC73C\uB85C \uAC00\uACA9\uC774 'range * k' \uC774\uC0C1 \uC0C1\uC2B9\uD558\uBA74 \uD574\uB2F9 \uAC00\uACA9\uC5D0 \uB9E4\uC218\n    - k\uB294 0.5 ~ 1 (0.5 \uCD94\uCC9C)\n3. \uB9E4\uB3C4 \uAE30\uC900\n    - \uADF8 \uB0A0 \uC885\uAC00\uC5D0 \uD310\uB2E4.\n4. \uC2DC\uAC00, \uC885\uAC00, \uACE0\uAC00, \uC800\uAC00\uC758 \uAE30\uC900\n    - \uC2DC\uAC00 : \uD544\uC790\uB294 \uC8FC\uB85C \uC624\uC804 0\uC2DC\uB098 1\uC2DC\n    - \uC885\uAC00 : \uC2DC\uAC00\uC5D0\uC11C 24\uC2DC\uAC04 \uD6C4\uC758 \uAC00\uACA9\n    - \uACE0\uAC00(\uC800\uAC00): 24\uC2DC\uAC04 \uB3D9\uC548 \uAC00\uC7A5 \uB192\uC740 \uAC00\uACA9\n\n\nTODO : \uB2E4\uC911 \uCF54\uC778 \uC801\uC6A9\n */\n\nimport Control from \"./Control\";\nimport Overview from \"./Overview\";\nimport Table from \"./Table\";\n\nexport default class AppBacktest5 extends HTMLElement {\n    public tradeData: any[];\n    public markets: string[];\n    public count: number;\n    public totalInvestmentAmount: number;\n    public investmentAmount: number;\n    public k: number;\n\n    private overviewCustomElement: Overview;\n    private controlCustomElement: Control;\n    private tableCustomElement: Table;\n\n    constructor() {\n        super();\n\n        this.tradeData = [];\n        // this.markets = [\"KRW-BTC\", \"KRW-ETH\", \"KRW-DOGE\", \"KRW-SBD\", \"KRW-XRP\"];\n        this.markets = [\"KRW-NEAR\"];\n        this.count = 60;\n        this.totalInvestmentAmount = 1000000;\n        this.investmentAmount =\n            this.totalInvestmentAmount / this.markets.length;\n        this.k = 0.5; // \uCD94\uCC9C 0.5\n\n        this.overviewCustomElement = this.querySelector(\n            \"backtest-overview\"\n        ) as Overview;\n        this.controlCustomElement = this.querySelector(\n            \"backtest-control\"\n        ) as Control;\n        this.tableCustomElement = this.querySelector(\"backtest-table\") as Table;\n    }\n\n    connectedCallback() {\n        this.runBackTest();\n    }\n\n    public async runBackTest() {\n        for (const market of this.markets) {\n            console.log(market);\n\n            try {\n                const data = await this.fetchData(\n                    market,\n                    (this.count + 1).toString()\n                );\n\n                const realprices = await this.getRealPrices(data);\n\n                const result = this.backtest(data, realprices);\n\n                this.render(result);\n            } catch (error) {\n                console.error(\"Error in runBackTest:\", error);\n                // \uC5D0\uB7EC \uCC98\uB9AC \uB85C\uC9C1 \uCD94\uAC00 (\uC608: \uC5D0\uB7EC \uBC1C\uC0DD\uC2DC \uC7AC\uC2DC\uB3C4 \uB610\uB294 \uB85C\uADF8 \uC800\uC7A5 \uB4F1)\n            }\n        }\n    }\n\n    private backtest(fetchedData: ICandles5[], orginRealPrices: IRealPrice[]) {\n        const realPrices = orginRealPrices.slice(1);\n        const strategedData = this.strategy(fetchedData, realPrices);\n        const calculatedData = this.calculateProfits(strategedData);\n        return calculatedData;\n    }\n\n    private strategy(fetchedData: ICandles5[], realPrices: IRealPrice[]) {\n        const result = fetchedData\n            .slice(1)\n            .map((aData: ICandles5, index: number) => {\n                // 1. \uC804\uB0A0 \uD558\uB8E8\uB9CC\uC5D0 \uC6C0\uC9C1\uC778 \uCD5C\uB300\uD3ED\n                const prevData = fetchedData[index];\n                const range = prevData.high_price - prevData.low_price;\n\n                // 2. \uB9E4\uC218 \uAE30\uC900\n                // \uC2E4\uC2DC\uAC04 \uAC00\uACA9 > \uB2F9\uC77C \uC2DC\uAC00 + (\uB808\uC778\uC9C0 * k)\n                const realPrice = realPrices[index].price;\n                const standardPrice = aData.opening_price + range * this.k;\n                const buyCondition = realPrice > standardPrice;\n\n                return {\n                    market: aData.market,\n                    date: aData.candle_date_time_kst,\n                    range,\n                    standardPrice,\n                    buyCondition,\n                    action: buyCondition ? \"Trade\" : \"Reserve\",\n                    buyPrice: realPrice,\n                    sellPrice: aData.trade_price,\n                };\n            });\n\n        return result;\n    }\n\n    private calculateProfits(data: IBacktest5[]) {\n        let sumProfit = 0;\n\n        const result = data.map((aData) => {\n            switch (aData.action) {\n                case \"Trade\":\n                    const rate =\n                        aData.sellPrice && aData.buyPrice\n                            ? (aData.sellPrice - aData.buyPrice) /\n                              aData.buyPrice\n                            : 0;\n                    const profit = rate * this.investmentAmount;\n                    sumProfit += profit;\n\n                    return {\n                        ...aData,\n                        rate,\n                        profit,\n                        sumProfit,\n                    };\n\n                default:\n                    return {\n                        ...aData,\n                        buyPrice: null,\n                        sellPrice: null,\n                        sumProfit,\n                    };\n            }\n        });\n        return result;\n    }\n\n    private async getRealPrices(data: ICandles5[]) {\n        const realprices = [];\n        for (const aData of data) {\n            const date = aData.candle_date_time_kst;\n            const toDate = date.replace(\"T09:00:00\", \"T13:00:00+09:00\");\n            const response = await this.fetchMinutes(\n                aData.market,\n                \"60\",\n                \"1\",\n                toDate\n            );\n            const price = response[0].opening_price;\n\n            realprices.push({\n                date,\n                price,\n            });\n\n            await this.delay(100);\n        }\n        return realprices;\n    }\n\n    private async fetchData(market: string, count: string) {\n        const searchParams = new URLSearchParams({\n            market: market,\n            count,\n        });\n\n        const response = await fetch(`/fetchCandles?${searchParams}`);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    private async fetchMinutes(\n        market: string,\n        unit: string,\n        fetchCount: string,\n        to: string\n    ) {\n        const searchParams = new URLSearchParams({\n            market: market,\n            count: fetchCount,\n            unit,\n            to,\n            // to: \"2024-04-28T01:00:00+09:00\",\n        });\n\n        const response = await fetch(`/fetchCandlesMinutes?${searchParams}`);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    private delay(duration: number) {\n        return new Promise((resolve) => setTimeout(resolve, duration));\n    }\n\n    private render(data: IBacktest5[]) {\n        this.tableCustomElement.render(data);\n    }\n}\n", "export function cloneTemplate<T extends HTMLElement>(\n    template: HTMLTemplateElement\n) {\n    const content = template.content.firstElementChild;\n    if (!content) {\n        throw new Error(\"Template content is empty\");\n    }\n    return content.cloneNode(true) as T;\n}\n\nexport function updateElementsTextWithData<T>(data: T, container: HTMLElement) {\n    Object.entries(data as Record<string, unknown>).forEach(([key, value]) => {\n        const element = container.querySelector(`.${key}`) as HTMLElement;\n        // console.log(key, value, element);\n        element.textContent = String(value);\n    });\n}\n\nexport function roundToDecimalPlace(amount: number, point: number) {\n    const decimalPoint = Math.pow(10, point);\n    return Math.round(amount * decimalPoint) / decimalPoint;\n}\n", "import {\n    cloneTemplate,\n    updateElementsTextWithData,\n} from \"@app/scripts/utils/helpers\";\nimport AppBacktest4 from \"./AppBacktest4\";\n\nexport default class Overview extends HTMLElement {\n    private app: AppBacktest4;\n\n    private totalProfit: number;\n    private totalSumPrice: number;\n    private size: number;\n\n    private sumElement: HTMLElement;\n    private listElement: HTMLElement;\n    private itemTemplate: HTMLTemplateElement;\n\n    constructor() {\n        super();\n\n        this.app = document.querySelector(\"app-backtest4\") as AppBacktest4;\n\n        this.totalProfit = 0;\n        this.totalSumPrice = 0;\n        this.size = 0;\n\n        this.sumElement = this.querySelector(\".overview-sum\") as HTMLElement;\n        this.listElement = this.querySelector(\".overview-list\") as HTMLElement;\n        this.itemTemplate = document.querySelector(\n            \"#tp-overviewItem\"\n        ) as HTMLTemplateElement;\n    }\n\n    connectedCallback() {}\n\n    public redner() {\n        this.renderList();\n        this.renderSum(true);\n    }\n\n    private renderList() {\n        if (!this.app) return;\n\n        const totalProfit =\n            this.app.tradeData[this.app.tradeData.length - 1].unrealize_sum;\n        const totalRate = (totalProfit / this.app.investmentPrice) * 100;\n        const renderData = {\n            market: this.app.market,\n            period: this.app.count,\n            totalRate: `${totalRate.toFixed(2)}%`,\n            totalProfit: ` ${Math.round(totalProfit).toLocaleString()} \uC6D0`,\n        };\n\n        const cloned = cloneTemplate<HTMLElement>(this.itemTemplate);\n        cloned.dataset.value = totalProfit;\n\n        updateElementsTextWithData(renderData, cloned);\n\n        this.listElement.appendChild(cloned);\n\n        this.addEvent(cloned);\n\n        this.totalProfit = totalProfit;\n    }\n\n    addEvent(cloned: HTMLElement) {\n        const deleteButton = cloned.querySelector(\n            \".deleteButton\"\n        ) as HTMLButtonElement;\n\n        deleteButton.addEventListener(\"click\", () => {\n            const profit = Number(cloned.dataset.value);\n            cloned.remove();\n            this.renderSum(false, profit);\n        });\n    }\n\n    private renderSum(isAdd: boolean, profit?: number) {\n        if (!this.app) return;\n\n        if (isAdd) {\n            this.totalSumPrice += this.totalProfit;\n            this.size++;\n        } else {\n            if (!profit) return;\n            this.totalSumPrice -= profit;\n            this.size--;\n        }\n\n        const totalSumRate =\n            this.totalSumPrice === 0\n                ? 0\n                : (this.totalSumPrice /\n                      (this.app.investmentPrice * this.size)) *\n                  100;\n\n        const renderData = {\n            totalSumPrice: Math.round(this.totalSumPrice).toLocaleString(),\n            totalSumRate: totalSumRate.toFixed(2).toLocaleString(),\n        };\n\n        updateElementsTextWithData(renderData, this.sumElement);\n    }\n}\n", "import AppBacktest4 from \"./AppBacktest4\";\n\nexport default class Control extends HTMLElement {\n    private app: AppBacktest4;\n\n    private formElement: HTMLFormElement;\n    private selectElement: HTMLSelectElement;\n    private countElement: HTMLInputElement;\n    private investmentPriceElement: HTMLElement;\n\n    constructor() {\n        super();\n\n        this.app = document.querySelector(\"app-backtest4\") as AppBacktest4;\n\n        this.formElement = this.querySelector(\"form\") as HTMLFormElement;\n        this.selectElement = this.querySelector(\"select\") as HTMLSelectElement;\n        this.countElement = this.querySelector(\n            \"input[name=count]\"\n        ) as HTMLInputElement;\n        this.investmentPriceElement = this.querySelector(\n            \".investmentPrice\"\n        ) as HTMLElement;\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    connectedCallback() {\n        this.formElement.addEventListener(\"submit\", this.onSubmit);\n        this.selectElement.addEventListener(\"change\", this.onChange);\n    }\n\n    disconnectedCallback() {\n        this.formElement.removeEventListener(\"submit\", this.onSubmit);\n        this.selectElement.removeEventListener(\"change\", this.onChange);\n    }\n\n    public initialize() {\n        if (!this.app) return;\n\n        this.app.market = this.selectElement.value;\n        this.countElement.value = this.app.count.toString();\n        this.investmentPriceElement.textContent =\n            this.app.investmentPrice.toLocaleString();\n    }\n\n    private onChange(event: Event) {\n        if (!this.app) return;\n\n        const target = event.target as HTMLInputElement;\n        this.app.market = target.value;\n        this.app.runBackTest();\n    }\n\n    private onSubmit(event: Event) {\n        event?.preventDefault();\n\n        if (!this.app) return;\n\n        const maxSize = Number(this.countElement.getAttribute(\"max\"));\n        this.app.count =\n            Number(this.countElement.value) > maxSize\n                ? maxSize\n                : Number(this.countElement.value);\n        this.countElement.value = this.app.count.toString();\n        this.app.runBackTest();\n    }\n}\n", "import {\n    cloneTemplate,\n    updateElementsTextWithData,\n} from \"@app/scripts/utils/helpers\";\n\nexport default class BacktestTable extends HTMLElement {\n    private tableElement: HTMLElement;\n    private template: HTMLTemplateElement;\n\n    constructor() {\n        super();\n\n        this.tableElement = this.querySelector(\"tbody\") as HTMLElement;\n        this.template = document.querySelector(\n            \"#tp-item\"\n        ) as HTMLTemplateElement;\n    }\n\n    connectedCallback() {}\n\n    public render(data: IBacktest5[]) {\n        this.tableElement.innerHTML = \"\";\n        const fragment = new DocumentFragment();\n\n        data.map((aData: IBacktest5, index) =>\n            this.createItem(aData, index)\n        ).forEach((cloned: HTMLElement) => fragment.appendChild(cloned));\n\n        this.tableElement.appendChild(fragment);\n    }\n\n    private createItem(aData: IBacktest5, index: number) {\n        const cloned = cloneTemplate<HTMLElement>(this.template);\n\n        const parseData = {\n            index,\n            date: aData.date,\n            range: aData.range.toLocaleString(),\n            condition: aData.buyCondition.toString(),\n            action: aData.action?.toString(),\n            standardPrice: aData.standardPrice.toLocaleString(),\n            buyPrice:\n                (aData.buyPrice &&\n                    Math.round(aData.buyPrice).toLocaleString()) ||\n                \"\",\n            sellPrice:\n                (aData.sellPrice &&\n                    Math.round(aData.sellPrice).toLocaleString()) ||\n                \"\",\n            rate: (aData.rate && aData.rate * 100)?.toFixed(2) || \"\",\n            profit:\n                (aData.profit && Math.round(aData.profit).toLocaleString()) ||\n                \"\",\n            sumProfit:\n                aData.sumProfit && Math.round(aData.sumProfit).toLocaleString(),\n        };\n\n        updateElementsTextWithData(parseData, cloned);\n\n        cloned.dataset.action = aData.action?.toString();\n\n        return cloned;\n    }\n}\n", "import AppBacktest5 from \"./AppBacktest5\";\nimport Overview from \"./Overview\";\nimport Control from \"./Control\";\nimport Table from \"./Table\";\n\ncustomElements.define(\"backtest-control\", Control);\ncustomElements.define(\"backtest-overview\", Overview);\ncustomElements.define(\"backtest-table\", Table);\ncustomElements.define(\"app-backtest5\", AppBacktest5);\n"],
  "mappings": "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",
  "names": []
}

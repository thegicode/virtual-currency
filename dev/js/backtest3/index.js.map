{
  "version": 3,
  "sources": ["../../../app/scripts/pages/backtest3/AppBacktest3.ts", "../../../app/scripts/pages/backtest3/index.ts"],
  "sourcesContent": ["/**\n * \uD22C\uC790\uC804\uB7B5 3 : \uB4C0\uC5BC \uBAA8\uBA58\uD140 + \uD604\uAE08 \uBE44\uC911 \uCD5C\uC18C 90%\n * \uAC70\uB798\uBE44\uC6A9 0.2% \uC801\uC6A9\n * \uD22C\uC790 \uB300\uC0C1 : \uC544\uBB34 \uAC00\uC0C1\uD654\uD3D0 3, 4\uAC1C \uC120\uD0DD\n * \uAC70\uB798\uBE44\uC6A9 : 0.2% \uC801\uC6A9\n * \uD22C\uC790\uC804\uB7B5\n *  - \uC120\uD0DD\uD55C \uAC00\uC0C1\uD654\uD3D0\uC758 \uACFC\uAC70 30\uC77C \uC218\uC775\uB960 \uCCB4\uD06C\n *  - \uCD5C\uADFC 30\uC77C\uAC04 \uAC00\uC7A5 \uC218\uC775\uB960\uC774 \uC88B\uC740 \uAC00\uC0C1\uD654\uD3D0\uC5D0\uC11C \uC790\uC0B0\uC758 10% \uD22C\uC785\n *  - \uCD5C\uADFC 30\uC77C\uAC04 \uAC00\uC7A5 \uC218\uC775\uB960\uC774 \uC88B\uC740 \uAC00\uC0C1\uD654\uD3D0\uAC00 \uBC14\uB014 \uACBD\uC6B0 \uAE30\uC874 \uBCF4\uC720 \uD654\uD3D0 \uB9E4\uB3C4, \uC0C8\uB85C\uC6B4 \uD654\uD3D0 \uB9E4\uC218\n *  - \uC120\uD0DD\uD55C \uBAA8\uB4E0 \uAC00\uC0C1\uD654\uD3D0\uC758 30\uC77C \uC218\uC775\uB960\uC774 \uB9C8\uC774\uB108\uC2A4\uB85C \uB3CC\uC544\uC124 \uACBD\uC6B0 \uBAA8\uB4E0 \uAC00\uC0C1\uD654\uD3D0 \uB9E4\uB3C4, \uD604\uAE08 \uBCF4\uC720\n */\n\nexport default class AppBacktest3 extends HTMLElement {\n    private markets: string[];\n    private data: any;\n    private investmentPrice: number;\n\n    constructor() {\n        super();\n\n        this.markets = [\"KRW-BTC\", \"KRW-ETH\", \"KRW-DOGE\", \"KRW-SBD\", \"KRW-XRP\"];\n        this.data = [];\n        this.investmentPrice = 200000;\n    }\n\n    async connectedCallback() {\n        this.data = await this.loadData();\n        this.getGoodMarkets();\n    }\n\n    disconnectedCallback() {}\n\n    private async loadData() {\n        const promises = this.markets.map(async (market) => {\n            const candles = await this.getCandles(market);\n            return {\n                market,\n                candles,\n            };\n        });\n        return await Promise.all(promises);\n    }\n\n    private async getCandles(market: string) {\n        const searchParams = new URLSearchParams({\n            market: market,\n            count: \"30\",\n        });\n\n        const response = await fetch(`/fetchCandles?${searchParams}`);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    private getGoodMarkets() {\n        const marketRates = this.data.map((marketData: any) =>\n            this.getRates(marketData)\n        );\n\n        // const marketRates = [\n        //     {\n        //         market: \"KRW-BTC\",\n        //         rate: 20,\n        //     },\n        //     { market: \"KRW-ETH\", rate: 10 },\n        //     { market: \"KRW-XRP\", rate: -0.2 },\n        // ];\n\n        const markets = this.getMarkets(marketRates);\n\n        this.renderMarkets(markets);\n    }\n\n    private getRates({ market, candles }: any) {\n        const startPrice = candles[0].trade_price;\n        const lastPrice = candles[candles.length - 1].trade_price;\n        const rate = (lastPrice - startPrice) / startPrice;\n        return {\n            market,\n            rate: rate * 100,\n        };\n    }\n\n    private getMarkets(marketRates: any) {\n        const sortedMarkets = marketRates.sort(\n            (a: any, b: any) => b.rate - a.rate\n        );\n        const newMarkets = sortedMarkets.filter(\n            (aMarket: any) => aMarket.rate > 0\n        );\n\n        return newMarkets;\n    }\n\n    private renderMarkets(markets: any) {\n        const resultElement = this.querySelector(\".reulst\") as HTMLElement;\n        let markupStrings = \"\";\n\n        if (markets.length === 0) {\n            markupStrings =\n                \"\uBAA8\uB4E0 \uAC00\uC0C1\uD654\uD3D0\uC758 30\uC77C \uC218\uC775\uB960\uC774 \uB9C8\uC774\uB108\uC2A4\uC785\uB2C8\uB2E4. <br>\uBAA8\uB4E0 \uCF54\uC778\uC744 \uB9E4\uB3C4\uD558\uC138\uC694.\";\n        }\n\n        markets.forEach((aMarket: any) => {\n            markupStrings += `<li><span>${\n                aMarket.market\n            }</span> | <span>${aMarket.rate.toFixed(2)}</span></li>`;\n        });\n        resultElement.innerHTML = markupStrings;\n    }\n}\n", "import AppBacktest3 from \"./AppBacktest3\";\n\ncustomElements.define(\"app-backtest2\", AppBacktest3);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,MAAqB,eAArB,cAA0C,YAAW;IAKjD,cAAA;AACI,YAAK;AAEL,WAAK,UAAU,CAAC,WAAW,WAAW,YAAY,WAAW,SAAS;AACtE,WAAK,OAAO,CAAA;AACZ,WAAK,kBAAkB;IAC3B;IAEM,oBAAiB;;AACnB,aAAK,OAAO,MAAM,KAAK,SAAQ;AAC/B,aAAK,eAAc;MACvB,CAAC;;IAED,uBAAoB;IAAI;IAEV,WAAQ;;AAClB,cAAM,WAAW,KAAK,QAAQ,IAAI,CAAO,WAAU,UAAA,MAAA,QAAA,QAAA,aAAA;AAC/C,gBAAM,UAAU,MAAM,KAAK,WAAW,MAAM;AAC5C,iBAAO;YACH;YACA;;QAER,CAAC,CAAA;AACD,eAAO,MAAM,QAAQ,IAAI,QAAQ;MACrC,CAAC;;IAEa,WAAW,QAAc;;AACnC,cAAM,eAAe,IAAI,gBAAgB;UACrC;UACA,OAAO;SACV;AAED,cAAM,WAAW,MAAM,MAAM,iBAAiB,YAAY,EAAE;AAC5D,YAAI,CAAC,SAAS,IAAI;AACd,gBAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;;AAE5D,eAAO,MAAM,SAAS,KAAI;MAC9B,CAAC;;IAEO,iBAAc;AAClB,YAAM,cAAc,KAAK,KAAK,IAAI,CAAC,eAC/B,KAAK,SAAS,UAAU,CAAC;AAY7B,YAAM,UAAU,KAAK,WAAW,WAAW;AAE3C,WAAK,cAAc,OAAO;IAC9B;IAEQ,SAAS,EAAE,QAAQ,QAAO,GAAO;AACrC,YAAM,aAAa,QAAQ,CAAC,EAAE;AAC9B,YAAM,YAAY,QAAQ,QAAQ,SAAS,CAAC,EAAE;AAC9C,YAAM,QAAQ,YAAY,cAAc;AACxC,aAAO;QACH;QACA,MAAM,OAAO;;IAErB;IAEQ,WAAW,aAAgB;AAC/B,YAAM,gBAAgB,YAAY,KAC9B,CAAC,GAAQ,MAAW,EAAE,OAAO,EAAE,IAAI;AAEvC,YAAM,aAAa,cAAc,OAC7B,CAAC,YAAiB,QAAQ,OAAO,CAAC;AAGtC,aAAO;IACX;IAEQ,cAAc,SAAY;AAC9B,YAAM,gBAAgB,KAAK,cAAc,SAAS;AAClD,UAAI,gBAAgB;AAEpB,UAAI,QAAQ,WAAW,GAAG;AACtB,wBACI;;AAGR,cAAQ,QAAQ,CAAC,YAAgB;AAC7B,yBAAiB,aACb,QAAQ,MACZ,mBAAmB,QAAQ,KAAK,QAAQ,CAAC,CAAC;MAC9C,CAAC;AACD,oBAAc,YAAY;IAC9B;;;;AC7GJ,iBAAe,OAAO,iBAAiB,YAAY;",
  "names": []
}
